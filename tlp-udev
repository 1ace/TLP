#!/bin/sh
# tlp - handle added usb devices

# --- Definitions
LOGGER=logger

USBD=/sys/bus/usb/devices
USB_TIMEOUT=2
USB_TIMEOUT_MS=2000
USB_DONE=/var/run/tlp.usb-done

CFG=/etc/default/tlp

# --- Subroutines
patinstr () { # $1: pattern, $2: target -- test if pattern matches part of target
    [ -n "$1" -a -n "$2" -a -z "${2##*$1*}" ]
    return $?
}

echo_debug () { # $1: tag; $2: msg; echo debug msg if tag matches 
    if patinstr "$1" "$TLP_DEBUG"; then
        $LOGGER -p debug -t "tlp[$$,$PPID]" "$2"
    fi
}

# --- MAIN
usbdevp=/sys$1
hid=$2

# Read config
[ -f $CFG ] || exit 0
. $CFG

# Exit if TLP or autosuspend disabled
[ "$TLP_ENABLE" = "1" ] && [ "$USB_AUTOSUSPEND" = "1" ] || exit 0

# Exit if batch mode disabled or startup not finished
[ "$X_USB_NO_BATCH" = "1" ] || [ -f $USB_DONE ] || exit 0

# Handle hid subdevices
if [ "$hid" = "_hid" ]; then
    usbdevp=${usbdevp%/*} # chop one subdev level from dev path
    
    # check subdevice number
    if [ -f $usbdevp/bInterfaceNumber ]; then
        # it is a subdev
        bi=$(cat $usbdevp/bInterfaceNumber)
        # quit for subdevices > 0
        [ $bi -eq 0 ] || exit 0
    else
        # it is not a subdev
        exit 0
    fi

    usbdevp=${usbdevp%/*} # chop another subdev level from dev path
fi

# Handle device
if [ -f $usbdevp/power/autosuspend ] || [ -f $usbdevp/power/autosuspend_delay_ms ]; then
    # device is autosuspendable
    ctrlf="control"
    autof="autosuspend_delay_ms"
    usbid="$(cat $usbdevp/idVendor):$(cat $usbdevp/idProduct)"
    busdev="Bus $(cat $usbdevp/busnum) Dev $(cat $usbdevp/devnum)"
            
    control="auto"
    if [ "$hid" = "_hid" ]; then
        # hid devices
        control="on"
    elif patinstr "$usbid" "$USB_BLACKLIST"; then
        # blacklisted device
        control="on"
    fi
        
    if [ -f $usbdevp/power/control ]; then
        echo "$control" > $usbdevp/power/control
    else
        # level is deprecated
        echo "$control" > $usbdevp/power/level
        ctrlf="level"
    fi
    
    if [ -f $usbdevp/power/autosuspend_delay_ms ]; then
        echo $USB_TIMEOUT_MS > $usbdevp/power/autosuspend_delay_ms 2> /dev/null
        if [ $? != 0 ]; then
            # openSUSE 11.4/2.6.37: writing to autosuspend_delay_ms fails -> fallback to autosuspend
            echo_debug "usb" "udev_usb.autosuspend_delay_ms_not_writable: $busdev ID $usbid $usbdevp"
            echo $USB_TIMEOUT > $usbdevp/power/autosuspend
            autof="autosuspend"
        fi
    else
        # autosuspend is deprecated
        echo $USB_TIMEOUT > $usbdevp/power/autosuspend
        autof="autosuspend"
    fi
    
    echo_debug "usb" "udev_usb.$control$hid: $busdev ID $usbid $usbdevp [$ctrlf $autof]"
fi

exit 0


