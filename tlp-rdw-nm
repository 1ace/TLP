#!/bin/sh
# tlp-rdw - network manager dispatcher hook:
#           enable/disable radios on ifup/ifdown
#
# Copyright (c) 2012 Thomas Koch <linrunner at gmx.net>
# This software is licensed under the GPL v2.

# --- Constants
readonly LIB=/usr/lib/tlp-pm/tlp-functions
readonly RFLIB=/usr/lib/tlp-pm/tlp-rf-func

# --- Source libraries
[ -f $LIB ] || exit 0
[ -f $RFLIB ] || exit 0
. $LIB
. $RFLIB

# --- MAIN
read_defaults
check_tlp_enabled || exit 0

# Get args
iface="$1"
action="$2"

# Quit for invalid interfaces
[ -n "$iface" ] && [ "$iface" != "none" ] || exit 0

echo_debug "nm" "rdw_nm($iface).$action"

# Quit if suspend/resume in progress
check_run_flag $SUSPEND_IN_PROGRESS && exit 0

# Quit if timed lock in progress
check_timed_lock tlp-rdw-nm && exit 0

# Determine interface type
case $iface in
    ppp*) # usb wwan: iface != dev
        if [ -n "$($NMCLI dev | egrep 'gsm.*connected')" ]; then 
            itype="gsm"
        fi
        ;;

    *) # general case: iface = dev
        itype="$($NMCLI dev | awk '$1 ~ /'$iface'/ { print $2; }')"
        ;;
esac

echo_debug "nm" "rdw_nm($iface).$action: type=$itype"

case $action in
    up) # interface up, disable configured interfaces

        set_timed_lock tlp-rdw-nm 5 # lock rdw events for 5 seconds

        case $itype in
            802-3-ethernet)
                for dev in $DEVICES_TO_DISABLE_ON_LAN_CONNECT; do
                    [ -n "$dev" ] && device_off $dev
                done                
                ;;
            
            802-11-wireless)
                for dev in $DEVICES_TO_DISABLE_ON_WIFI_CONNECT; do 
                    [ -n "$dev" ] && [ "$dev" != wifi ] && device_off $dev
                done
                ;;
            
            gsm)
                for dev in $DEVICES_TO_DISABLE_ON_WWAN_CONNECT; do
                    [ -n "$dev" ] && [ "$dev" != wwan ] && device_off $dev
                done
                ;;
        esac
        ;; # up

    down) # interface down, enable configured interfaces
        case $itype in
            802-3-ethernet)
                for dev in $DEVICES_TO_ENABLE_ON_LAN_DISCONNECT; do 
                    [ -n "$dev" ] && device_on $dev
                done
                ;;
            
            802-11-wireless)
                for dev in $DEVICES_TO_ENABLE_ON_WIFI_DISCONNECT; do 
                    [ -n "$dev" ] && [ "$dev" != wifi ] && device_on $dev
                done
                ;;
            
            gsm)
                for dev in $DEVICES_TO_ENABLE_ON_WWAN_DISCONNECT; do 
                    [ -n "$dev" ] && [ "$dev" != wwan ] && device_on $dev
                done
                ;;
        esac
        ;; # down
        
esac 
    
exit 0
